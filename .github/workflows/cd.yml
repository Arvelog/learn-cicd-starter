name: Continuous Deployment

on:
  push:
    branches: [main]

jobs:
  Deploy:
    runs-on: ubuntu-latest
    
    # Add environment variables section
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Make scripts executable
        run: |
          chmod +x ./scripts/buildprod.sh
          chmod +x ./scripts/migrateup.sh
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 'stable'
          
      - name: Install Turso CLI
        run: |
          curl -sSfL https://get.tur.so/install.sh | bash
          echo "$HOME/.turso/bin" >> $GITHUB_PATH
          # Make turso available in current shell
          export PATH=$PATH:$HOME/.turso/bin
      
      - name: Build application
        run: ./scripts/buildprod.sh
        shell: bash
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Run database migrations
        run: |
          # Create a direct migration script
          cat > ./direct-migrate.sh << 'EOF'
          #!/bin/bash
          
          # Install libsql-cli for direct SQL execution
          npm install -g libsql-cli
          
          # Process each migration file in order
          for SQL_FILE in sql/schema/*_*.sql; do
            echo "Processing $SQL_FILE"
            
            # Extract the SQL statements between "-- +goose Up" and "-- +goose Down"
            UP_SQL=$(sed -n '/-- +goose Up/,/-- +goose Down/p' "$SQL_FILE" | grep -v -- "-- +goose")
            
            # Execute the SQL against the Turso database
            echo "$UP_SQL" | libsql-cli "$DATABASE_URL"
            
            echo "Migration from $SQL_FILE completed"
          done
          
          echo "All migrations completed!"
          EOF
          
          chmod +x ./direct-migrate.sh
          ./direct-migrate.sh
        shell: bash
      
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
          
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: notely-455111
      
      - name: Build and push Docker image
        run: |
          gcloud builds submit --tag us-central1-docker.pkg.dev/notely-455111/notely-ar-repo/notely:latest .
          
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy notely --image us-central1-docker.pkg.dev/notely-455111/notely-ar-repo/notely:latest --region us-central1 --allow-unauthenticated --project notely-455111 --max-instances=4